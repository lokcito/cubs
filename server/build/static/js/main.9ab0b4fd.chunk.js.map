{"version":3,"sources":["logo.svg","Block.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Block","props","state","changeTo","bind","getClassName","this","handleChange","number","color","onClick","className","Component","App","nClicked","i","movs","near","length","_b","no","_new","Object","assign","setState","changesDone","src","alt","b_0","b_1","b_2","b_3","b_4","b_5","b_6","b_7","b_8","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ab0b4fd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {Component} from 'react';\nimport './App.css';\n\nclass Block extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t  \n\t\t};\n\t\tthis.changeTo = this.changeTo.bind(this);\n\t\tthis.getClassName = this.getClassName.bind(this);\n\t}\n  \n  changeTo() {\n    this.props.handleChange(this.props.number);\n  };\n  \n  getClassName() {\n    return 'box ' + this.props.color;\n  }\n  \n  render() {\n    return (\n      <div onClick={this.changeTo} className={this.getClassName()} ></div>\n    );\n  }\n}\n\nexport default Block;\n","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport Block from './Block';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);  \n\t\tthis.state = {\n\t\t  'movs': {\n        'b_0': {\n          'color': 'empty',\n          'near': ['b_1', 'b_3']\n        },\n        'b_1': {\n          'color': 'img_1',\n          'near': ['b_0', 'b_2', 'b_4']\n        },\n        'b_2': {\n          'color': 'img_2',\n          'near': ['b_1', 'b_5',]\n        },\n        'b_3': {\n          'color': 'img_3',\n          'near': ['b_0', 'b_4', 'b_6'],\n        },\n        'b_4': {\n          'color': 'img_4',\n          'near': ['b_1', 'b_3', 'b_5', 'b_7'],\n        },\n        'b_5': {\n          'color': 'img_5',\n          'near': ['b_2', 'b_4', 'b_8'],\n        },\n        'b_6': {\n          'color': 'img_6',\n          'near': ['b_3', 'b_7',],\n        },\n        'b_7': {\n          'color': 'img_7',\n          'near': ['b_6', 'b_4', 'b_8'],\n        },\n        'b_8': {\n          'color': 'img_8',\n          'near': ['b_7', 'b_5'],\n        },\n      }\n\t\t};\n    this.handleChange = this.handleChange.bind(this);\n\t}\n\tchangesDone() {\n\t // console.log(\"done!\", this.state);\n\t}\n\t\n\tcomponentDidMount() {\n\t  this.handleChange(1);\n\t  this.handleChange(4);\n\t  this.handleChange(7);\n\t  this.handleChange(6);\n\t  this.handleChange(3);\n\t  this.handleChange(0);\n\t  this.handleChange(1);\n\t  this.handleChange(4);\n\t  this.handleChange(7);\t  \n  }\n\t\n  handleChange(nClicked) {\n    if ( nClicked >= 0 && nClicked <= 8  ) {\n      for(var i = 0; this.state.movs['b_' + nClicked].near.length > i; i++) {\n        var _b = this.state.movs['b_' + nClicked].near[i];\n        // console.log(\">\", _b);\n        if (this.state.movs[_b].color === 'empty') {\n          var no = {\n            'movs': {}\n          };\n          no['movs'][_b] = {};\n          // this.state\n          // console.log(\"n\",  this.state.movs['b_' + nClicked].color);\n          no['movs'][_b].color = this.state.movs['b_' + nClicked].color;\n          no['movs'][_b].near = this.state.movs[_b].near;\n          \n          no['movs']['b_' + nClicked] = {};\n          no['movs']['b_' + nClicked].color = 'empty';\n          no['movs']['b_' + nClicked].near = this.state.movs['b_' + nClicked].near;\n\n          var _new = Object.assign(this.state.movs, no['movs']);\n          this.setState({\n            'movs': _new\n          }, function() {\n            this.changesDone();\n          });\n        }\n      }\n    }\n  };\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <img src=\"./bearx.jpg\" className=\"App-logo\" alt=\"logo\" />\n        </div>\n        <div className=\"wrapper\">\n          <div className=\"multibox\">\n            <Block number={0} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_0.color} />\n            <Block number={1} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_1.color} />\n            <Block number={2} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_2.color} />\n            <Block number={3} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_3.color} />\n            <Block number={4} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_4.color} />\n            <Block number={5} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_5.color} />\n            <Block number={6} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_6.color} />\n            <Block number={7} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_7.color} />\n            <Block number={8} \n            \thandleChange={this.handleChange} \n              color={this.state.movs.b_8.color} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}